name: build
on: push
jobs:
  mci-sbt:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: set-env/output variables
      uses: actions-tools/yaml-outputs@v2
      id: yaml
      with:
        file-path: '.github/mci-variables.yaml'

    - name: Login to Harmony Docker
      uses: docker/login-action@v2
      with:
        registry: hpeartifacts-docker-harmony.jfrog.io
        username: ${{ env.ARTIFACTORY_USER }}
        password: ${{ env.ARTIFACTORY_PWD }}

    - name: Login to Prod Internal Docker
      uses: docker/login-action@v2
      with:
        registry: hpeartifacts-harmony-docker-prod-internal-public-local.jfrog.io
        username: ${{ env.ARTIFACTORY_USER }}
        password: ${{ env.ARTIFACTORY_PWD }}

    - name: Set artifact URLs with sha1s
      shell: bash
      run: |
        while read -r name; do
          read -r uri
          if [[ "$uri" != "null" ]]; then
            docker pull $uri
            artifact_url=$(docker inspect --format='{{index .RepoDigests 0}}' $uri)
            export name
            export artifact_url
            yq -i '.artifacts += [{"PRODUCT_NAME": strenv(name), "ARTIFACT_URL": strenv(artifact_url)}]' .github/mci-variables.yaml
          fi
        done < <( jq -cr '.artifacts[] | (.name, .artifactURI)' target/artifacts.json)

    - name: Zip workspace
      run: |
        zip -rq0 workspace.zip .
      shell: bash

    - name: Preserve directories
      uses: actions/upload-artifact@v3
      with:
        name: workspace-artifacts
        path: workspace.zip

    - name: Preserve mci variables file for sbom upload
      uses: actions/upload-artifact@v3
      with:
        name: mci-variables.yaml
        path: .github/mci-variables.yaml

  set-matrix:
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
    - name: Restore workspace artifacts
      uses: actions/download-artifact@v3
      with:
        name: workspace-artifacts

    - name: Unzip workspace
      run: |
        unzip -oq workspace.zip
        rm workspace.zip
      shell: bash

    - name: set-env/output variables
      uses: actions-tools/yaml-outputs@v2
      id: yaml
      with:
        file-path: '.github/mci-variables.yaml'
    - id: set-matrix
      run: |
        echo "matrix=$(yq -I=0 -o=json '{"include": .artifacts}' .github/mci-variables.yaml)" >> $GITHUB_OUTPUT
#        echo "matrix=$(yq -I=0 -o=json '.include = .products | del(.products)' mci-variables.yaml)" >> $GITHUB_OUTPUT

  job2:
    needs: set-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    steps:
    - run: |
        echo "ARTIFACT_URL: ${{ matrix.ARTIFACT_URL }}"
        echo "PRODUCT_NAME: ${{ matrix.PRODUCT_NAME }}"
