name: build
on: push
jobs:
  set-matrix:
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: set-env/output variables
      uses: actions-tools/yaml-outputs@v2
      id: yaml
      with:
        file-path: 'mci-variables.yaml'
#    - id: set-matrix
#      run: |
#        echo "${{ steps.yaml.outputs.include }}"
#        echo "::set-output name=matrix::{\"include\":[{\"ARTIFACT_URL\":\"${{ env.ARTIFACT_URL1 }}\",\"PRODUCT_NAME\":\"${{ env.PRODUCT_NAME1 }}\"},{\"ARTIFACT_URL\":\"${{ env.ARTIFACT_URL2 }}\",\"PRODUCT_NAME\":\"${{ env.PRODUCT_NAME2 }}\"},{\"ARTIFACT_URL\":\"${{ env.ARTIFACT_URL3 }}\",\"PRODUCT_NAME\":\"${{ env.PRODUCT_NAME3 }}\"}]}"
#        echo 'matrix={"noCoverage":"true","someOtherVar":"false"}' >> $GITHUB_OUTPUT
    - id: set-matrix
      run: |
         echo "$(yq -I=0 -o=json --unwrapScalar=false '.' mci-variables.yaml)"
         echo "matrix=$(yq -I=0 -o=json '.' mci-variables.yaml)" >> $GITHUB_OUTPUT

  job2:
    needs: set-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    steps:
    - run: |
        echo "ARTIFACT_URL: ${{ matrix.ARTIFACT_URL }}"
        echo "PRODUCT_NAME: ${{ matrix.PRODUCT_NAME }}"
#        echo "noCoverage: ${{fromJson(needs.set-matrix.outputs.matrix).noCoverage}}"
